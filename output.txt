Function
    Begin
        Type
            int    [int] 
        FunctionName    [main] 
        {    [Brace] 
    Descriptions
        Descr
            Type
                int    [int] 
            VarList
                Id    [a] 
                ,    [Separ] 
                VarList
                    Id    [b] 
            ;    [Separ] 
        Descr
            Type
                int    [int] 
            VarList
                Id    [x] 
            ;    [Separ] 
    Operators
        Op
            Id    [a] 
            =    [=] 
            Expr
                SimpleExpr    [4] 
                +    [+] 
                SimpleExpr
                    (    [Scob] 
                    Expr
                        SimpleExpr    [b] 
                        +    [+] 
                        SimpleExpr    [4] 
                    )    [Scob] 
            ;    [Separ] 
        Op
            while    [while] 
            (    [Scob] 
            Condition
                SimpleExpr    [i] 
                RelationsOperators    [<] 
                SimpleExpr    [5] 
                ;    [Scob] 
            )    [Scob] 
            {    [Brace] 
            Operators
                Op
                    Id    [b] 
                    =    [=] 
                    Expr
                        SimpleExpr    [a] 
                        +    [+] 
                        SimpleExpr    [4] 
                    ;    [Separ] 
                Op
                    while    [while] 
                    (    [Scob] 
                    Condition
                        Expr
                            SimpleExpr    [b] 
                            +    [+] 
                            SimpleExpr    [1] 
                        RelationsOperators    [<] 
                        SimpleExpr    [4] 
                        ;    [Scob] 
                    )    [Scob] 
                    {    [Brace] 
                    Operators
                        Op
                            while    [while] 
                            (    [Scob] 
                            Condition
                                SimpleExpr
                                    (    [Scob] 
                                    Expr
                                        SimpleExpr    [b] 
                                        +    [+] 
                                        SimpleExpr    [1] 
                                    )    [Scob] 
                                RelationsOperators    [<] 
                                SimpleExpr    [4] 
                                ;    [Scob] 
                            )    [Scob] 
                            {    [Brace] 
                            Operators
                                Op
                                    while    [while] 
                                    (    [Scob] 
                                    Condition
                                        SimpleExpr    [a] 
                                        RelationsOperators    [>] 
                                        SimpleExpr    [1] 
                                        ;    [Scob] 
                                    )    [Scob] 
                                    {    [Brace] 
                                    Operators
                                        Op
                                            Id    [a] 
                                            =    [=] 
                                            Expr
                                                SimpleExpr    [a] 
                                                +    [+] 
                                                SimpleExpr    [a] 
                                            ;    [Separ] 
                                    }    [Brace] 
                            }    [Brace] 
                    }    [Brace] 
            }    [Brace] 
    End
        return    [return] 
        Id    [final] 
        ;    [Separ] 
        }    [Brace] 
0